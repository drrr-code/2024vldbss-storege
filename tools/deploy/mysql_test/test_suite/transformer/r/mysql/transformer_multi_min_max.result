drop table if exists t1,t2,t3;
drop sequence if exists s1;
create table t1(c1 int, c2 int);
create index i1 on t1(c1);
create index i2 on t1(c2);
create index i3 on t1(c1,c2);
create table t2(c1 int, c2 int);
create index i4 on t2(c1);
create table t3(c1 int, c2 int);
set ob_query_timeout = 10000000000;
insert /*+append enable_parallel_dml parallel(8) */ into t1
select if(random(7) % 10 = 0, null, UNIFORM(1, 10000, random(7))),
if(random(7) % 10 = 0, null, ZIPF(1, 1000, random(7))) from table(generator(100000));
insert /*+append enable_parallel_dml parallel(8) */ into t2
select if(random(7) % 10 = 0, null, UNIFORM(1, 10000, random(7))),
if(random(7) % 10 = 0, null, ZIPF(1, 1000, random(7))) from table(generator(100000));
insert /*+append enable_parallel_dml parallel(8) */ into t3
select if(random(7) % 10 = 0, null, UNIFORM(1, 10000, random(7))),
if(random(7) % 10 = 0, null, ZIPF(1, 1000, random(7))) from table(generator(100000));
result_format: 4
explain_protocol: 2

### 单min/max
EXPLAIN select max(c1) from t1;
Query Plan
===========================================================
|ID|OPERATOR         |NAME          |EST.ROWS|EST.TIME(us)|
-----------------------------------------------------------
|0 |SUBPLAN FILTER   |              |1       |3           |
|1 |├─EXPRESSION     |              |1       |1           |
|2 |└─TABLE FULL SCAN|t1(i1,Reverse)|1       |3           |
===========================================================
Outputs & filters:
-------------------------------------
  0 - output([:0]), filter(nil), rowset=16
      exec_params_(nil), onetime_exprs_([subquery(1)(:0)]), init_plan_idxs_(nil), use_batch=false
  1 - output([1]), filter(nil)
      values({1})
  2 - output([t1.c1]), filter([t1.c1 IS NOT NULL]), rowset=16
      access([t1.c1]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true
select max(c1) from t1;
+---------+
| max(c1) |
+---------+
|   10000 |
+---------+
EXPLAIN select /*+no_fast_minmax*/ max(c1) from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |4394        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MAX(T_FUN_MAX(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MAX(T_FUN_MAX(t1.c1))])
  1 - output([T_FUN_MAX(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MAX(t1.c1)])
select /*+no_fast_minmax*/ max(c1) from t1;
+---------+
| max(c1) |
+---------+
|   10000 |
+---------+
EXPLAIN select min(c2) from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SUBPLAN FILTER   |      |1       |3           |
|1 |├─EXPRESSION     |      |1       |1           |
|2 |└─TABLE FULL SCAN|t1(i2)|1       |3           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([:0]), filter(nil), rowset=16
      exec_params_(nil), onetime_exprs_([subquery(1)(:0)]), init_plan_idxs_(nil), use_batch=false
  1 - output([1]), filter(nil)
      values({1})
  2 - output([t1.c2]), filter([t1.c2 IS NOT NULL]), rowset=16
      access([t1.c2]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([t1.c2], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true
select min(c2) from t1;
+---------+
| min(c2) |
+---------+
|       0 |
+---------+
EXPLAIN select /*+no_fast_minmax*/ min(c2) from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |4394        |
|1 |└─TABLE FULL SCAN|t1(i2)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c2))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c2))])
  1 - output([T_FUN_MIN(t1.c2)]), filter(nil), rowset=256
      access([t1.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c2], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c2)])
select /*+no_fast_minmax*/ min(c2) from t1;
+---------+
| min(c2) |
+---------+
|       0 |
+---------+
EXPLAIN select 1,min(c1) from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SUBPLAN FILTER   |      |1       |3           |
|1 |├─EXPRESSION     |      |1       |1           |
|2 |└─TABLE FULL SCAN|t1(i1)|1       |3           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([1], [:0]), filter(nil), rowset=16
      exec_params_(nil), onetime_exprs_([subquery(1)(:0)]), init_plan_idxs_(nil), use_batch=false
  1 - output([1]), filter(nil)
      values({1})
  2 - output([t1.c1]), filter([t1.c1 IS NOT NULL]), rowset=16
      access([t1.c1]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true
select 1,min(c1) from t1;
+---+---------+
| 1 | min(c1) |
+---+---------+
| 1 |       1 |
+---+---------+
EXPLAIN select /*+no_fast_minmax*/ 1,min(c1) from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |4394        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([1], [T_FUN_MIN(T_FUN_MIN(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)])
select /*+no_fast_minmax*/ 1,min(c1) from t1;
+---+---------+
| 1 | min(c1) |
+---+---------+
| 1 |       1 |
+---+---------+

EXPLAIN select 1 from t1 having min(c1) > 1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SUBPLAN FILTER   |      |1       |3           |
|1 |├─EXPRESSION     |      |1       |1           |
|2 |└─TABLE FULL SCAN|t1(i1)|1       |3           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([1]), filter([:0 > 1]), rowset=16
      exec_params_(nil), onetime_exprs_([subquery(1)(:0)]), init_plan_idxs_(nil), use_batch=false
  1 - output([1]), filter(nil)
      values({1})
  2 - output([t1.c1]), filter([t1.c1 IS NOT NULL]), rowset=16
      access([t1.c1]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true
select 1 from t1 having min(c1) > 1;
+---+
| 1 |
+---+
+---+
EXPLAIN select /*+no_fast_minmax*/ 1 from t1 having min(c1) > 1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |4394        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([1]), filter([T_FUN_MIN(T_FUN_MIN(t1.c1)) > 1]), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)])
select /*+no_fast_minmax*/ 1 from t1 having min(c1) > 1;
+---+
| 1 |
+---+
+---+
EXPLAIN select 1 from t1 order by min(c1);
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SUBPLAN FILTER   |      |1       |3           |
|1 |├─EXPRESSION     |      |1       |1           |
|2 |└─TABLE FULL SCAN|t1(i1)|1       |3           |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([1]), filter(nil), rowset=16
      exec_params_(nil), onetime_exprs_([subquery(1)(:0)]), init_plan_idxs_(nil), use_batch=false
  1 - output([1]), filter(nil)
      values({1})
  2 - output([t1.c1]), filter([t1.c1 IS NOT NULL]), rowset=16
      access([t1.c1]), partitions(p0)
      limit(1), offset(nil), is_index_back=false, is_global_index=false, filter_before_indexback[false], 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true
select 1 from t1 order by min(c1);
+---+
| 1 |
+---+
| 1 |
+---+
EXPLAIN select /*+no_fast_minmax*/ 1 from t1 order by min(c1);
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |4394        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([1]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)])
select /*+no_fast_minmax*/ 1 from t1 order by min(c1);
+---+
| 1 |
+---+
| 1 |
+---+

### 多min/max
EXPLAIN select min(c1),max(c1) from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |5942        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)])
select min(c1),max(c1) from t1;
+---------+---------+
| min(c1) | max(c1) |
+---------+---------+
|       1 |   10000 |
+---------+---------+
EXPLAIN select /*+no_fast_minmax*/ min(c1),max(c1) from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |5942        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)])
select /*+no_fast_minmax*/ min(c1),max(c1) from t1;
+---------+---------+
| min(c1) | max(c1) |
+---------+---------+
|       1 |   10000 |
+---------+---------+
EXPLAIN select min(c1) as min, max(c1) as max from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |5942        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)])
select min(c1) as min, max(c1) as max from t1;
+------+-------+
| min  | max   |
+------+-------+
|    1 | 10000 |
+------+-------+
EXPLAIN select /*+no_fast_minmax*/ min(c1) as min, max(c1) as max from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |5942        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)])
select /*+no_fast_minmax*/ min(c1) as min, max(c1) as max from t1;
+------+-------+
| min  | max   |
+------+-------+
|    1 | 10000 |
+------+-------+
EXPLAIN select min(c1)+max(c1)*2 from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |5942        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1)) + T_FUN_MAX(T_FUN_MAX(t1.c1)) * 2]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)])
select min(c1)+max(c1)*2 from t1;
+-------------------+
| min(c1)+max(c1)*2 |
+-------------------+
|             20001 |
+-------------------+
EXPLAIN select /*+no_fast_minmax*/ min(c1)+max(c1)*2 from t1;
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |5942        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1)) + T_FUN_MAX(T_FUN_MAX(t1.c1)) * 2]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c1))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c1)])
select /*+no_fast_minmax*/ min(c1)+max(c1)*2 from t1;
+-------------------+
| min(c1)+max(c1)*2 |
+-------------------+
|             20001 |
+-------------------+
EXPLAIN select min(c1),max(c2) from t1;
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |SCALAR GROUP BY  |    |1       |8256        |
|1 |└─TABLE FULL SCAN|t1  |100000  |4896        |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c2))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c2))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)]), filter(nil), rowset=256
      access([t1.c1], [t1.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.__pk_increment]), range(MIN ; MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)])
select min(c1),max(c2) from t1;
+---------+---------+
| min(c1) | max(c2) |
+---------+---------+
|       1 |     999 |
+---------+---------+
EXPLAIN select /*+no_fast_minmax*/ min(c1),max(c2) from t1;
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |SCALAR GROUP BY  |    |1       |8256        |
|1 |└─TABLE FULL SCAN|t1  |100000  |4896        |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c2))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c2))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)]), filter(nil), rowset=256
      access([t1.c1], [t1.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.__pk_increment]), range(MIN ; MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)])
select /*+no_fast_minmax*/ min(c1),max(c2) from t1;
+---------+---------+
| min(c1) | max(c2) |
+---------+---------+
|       1 |     999 |
+---------+---------+

EXPLAIN select min(c1) from t1 having max(c2) > 0;
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |SCALAR GROUP BY  |    |1       |8256        |
|1 |└─TABLE FULL SCAN|t1  |100000  |4896        |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))]), filter([T_FUN_MAX(T_FUN_MAX(t1.c2)) > 0]), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c2))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)]), filter(nil), rowset=256
      access([t1.c1], [t1.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.__pk_increment]), range(MIN ; MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)])
select min(c1) from t1 having max(c2) > 0;
+---------+
| min(c1) |
+---------+
|       1 |
+---------+
EXPLAIN select /*+no_fast_minmax*/ min(c1) from t1 having max(c2) > 0;
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |SCALAR GROUP BY  |    |1       |8256        |
|1 |└─TABLE FULL SCAN|t1  |100000  |4896        |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))]), filter([T_FUN_MAX(T_FUN_MAX(t1.c2)) > 0]), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c2))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)]), filter(nil), rowset=256
      access([t1.c1], [t1.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.__pk_increment]), range(MIN ; MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)])
select /*+no_fast_minmax*/ min(c1) from t1 having max(c2) > 0;
+---------+
| min(c1) |
+---------+
|       1 |
+---------+
EXPLAIN select min(c1) from t1 order by max(c2);
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |SCALAR GROUP BY  |    |1       |8256        |
|1 |└─TABLE FULL SCAN|t1  |100000  |4896        |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c2))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)]), filter(nil), rowset=256
      access([t1.c1], [t1.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.__pk_increment]), range(MIN ; MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)])
select min(c1) from t1 order by max(c2);
+---------+
| min(c1) |
+---------+
|       1 |
+---------+
EXPLAIN select /*+no_fast_minmax*/ min(c1) from t1 order by max(c2);
Query Plan
=================================================
|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|
-------------------------------------------------
|0 |SCALAR GROUP BY  |    |1       |8256        |
|1 |└─TABLE FULL SCAN|t1  |100000  |4896        |
=================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(T_FUN_MIN(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(T_FUN_MIN(t1.c1))], [T_FUN_MAX(T_FUN_MAX(t1.c2))])
  1 - output([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)]), filter(nil), rowset=256
      access([t1.c1], [t1.c2]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.__pk_increment]), range(MIN ; MAX)always true, 
      pushdown_aggregation([T_FUN_MIN(t1.c1)], [T_FUN_MAX(t1.c2)])
select /*+no_fast_minmax*/ min(c1) from t1 order by max(c2);
+---------+
| min(c1) |
+---------+
|       1 |
+---------+
EXPLAIN select max(c1), min(c1) from t1 order by min(c1);
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |5942        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MAX(T_FUN_MAX(t1.c1))], [T_FUN_MIN(T_FUN_MIN(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MAX(T_FUN_MAX(t1.c1))], [T_FUN_MIN(T_FUN_MIN(t1.c1))])
  1 - output([T_FUN_MAX(t1.c1)], [T_FUN_MIN(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MAX(t1.c1)], [T_FUN_MIN(t1.c1)])
select max(c1), min(c1) from t1 order by min(c1);
+---------+---------+
| max(c1) | min(c1) |
+---------+---------+
|   10000 |       1 |
+---------+---------+
EXPLAIN select /*+no_fast_minmax*/ max(c1), min(c1) from t1 order by min(c1);
Query Plan
===================================================
|ID|OPERATOR         |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------
|0 |SCALAR GROUP BY  |      |1       |5942        |
|1 |└─TABLE FULL SCAN|t1(i1)|100000  |2581        |
===================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MAX(T_FUN_MAX(t1.c1))], [T_FUN_MIN(T_FUN_MIN(t1.c1))]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MAX(T_FUN_MAX(t1.c1))], [T_FUN_MIN(T_FUN_MIN(t1.c1))])
  1 - output([T_FUN_MAX(t1.c1)], [T_FUN_MIN(t1.c1)]), filter(nil), rowset=256
      access([t1.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t1.c1], [t1.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true, 
      pushdown_aggregation([T_FUN_MAX(t1.c1)], [T_FUN_MIN(t1.c1)])
select /*+no_fast_minmax*/ max(c1), min(c1) from t1 order by min(c1);
+---------+---------+
| max(c1) | min(c1) |
+---------+---------+
|   10000 |       1 |
+---------+---------+

EXPLAIN select min(c1),max(c1) from t2 where c1 = any (select c1 from t3);
Query Plan
=====================================================
|ID|OPERATOR           |NAME  |EST.ROWS|EST.TIME(us)|
-----------------------------------------------------
|0 |SCALAR GROUP BY    |      |1       |36589       |
|1 |└─HASH SEMI JOIN   |      |89890   |33568       |
|2 |  ├─TABLE FULL SCAN|t2(i4)|100000  |2581        |
|3 |  └─TABLE FULL SCAN|t3    |100000  |2581        |
=====================================================
Outputs & filters:
-------------------------------------
  0 - output([T_FUN_MIN(t2.c1)], [T_FUN_MAX(t2.c1)]), filter(nil), rowset=256
      group(nil), agg_func([T_FUN_MIN(t2.c1)], [T_FUN_MAX(t2.c1)])
  1 - output([t2.c1]), filter(nil), rowset=256
      equal_conds([t2.c1 = t3.c1]), other_conds(nil)
  2 - output([t2.c1]), filter(nil), rowset=256
      access([t2.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1], [t2.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true
  3 - output([t3.c1]), filter(nil), rowset=256
      access([t3.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.__pk_increment]), range(MIN ; MAX)always true
select min(c1),max(c1) from t2 where c1 = any (select c1 from t3);
+---------+---------+
| min(c1) | max(c1) |
+---------+---------+
|       1 |   10000 |
+---------+---------+
EXPLAIN select min(c1) from t2 where c1 = any (select c1 from t3);
Query Plan
=========================================================
|ID|OPERATOR               |NAME  |EST.ROWS|EST.TIME(us)|
---------------------------------------------------------
|0 |SUBPLAN FILTER         |      |1       |25387       |
|1 |├─EXPRESSION           |      |1       |1           |
|2 |└─LIMIT                |      |1       |25387       |
|3 |  └─MERGE SEMI JOIN    |      |1       |25387       |
|4 |    ├─TABLE FULL SCAN  |t2(i4)|334     |11          |
|5 |    └─SORT             |      |334     |25352       |
|6 |      └─TABLE FULL SCAN|t3    |100000  |2581        |
=========================================================
Outputs & filters:
-------------------------------------
  0 - output([:0]), filter(nil), rowset=256
      exec_params_(nil), onetime_exprs_([subquery(1)(:0)]), init_plan_idxs_(nil), use_batch=false
  1 - output([1]), filter(nil)
      values({1})
  2 - output([t2.c1]), filter(nil), rowset=256
      limit(1), offset(nil)
  3 - output([t2.c1]), filter(nil), rowset=256
      equal_conds([t2.c1 = t3.c1]), other_conds(nil)
      merge_directions([ASC])
  4 - output([t2.c1]), filter(nil), rowset=256
      access([t2.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t2.c1], [t2.__pk_increment]), range(MIN,MIN ; MAX,MAX)always true
  5 - output([t3.c1]), filter(nil), rowset=256
      sort_keys([t3.c1, ASC])
  6 - output([t3.c1]), filter(nil), rowset=256
      access([t3.c1]), partitions(p0)
      is_index_back=false, is_global_index=false, 
      range_key([t3.__pk_increment]), range(MIN ; MAX)always true
select min(c1) from t2 where c1 = any (select c1 from t3);
+---------+
| min(c1) |
+---------+
|       1 |
+---------+

drop table t1,t2,t3;
